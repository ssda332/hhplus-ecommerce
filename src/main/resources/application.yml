spring:
  data:
    redis:
      host: localhost
      port: 6379

  application:
    name: e-commerce

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/ecommerce?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul
    username: yj
    password: "0000"
    hikari:
      maximum-pool-size: 20
      connection-timeout: 250

  jpa:
    hibernate:
      ddl-auto: create
    defer-datasource-initialization: true
    show-sql: true
  sql:
    init:
      mode: always
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    producer:
      bootstrap-servers: localhost:9092 # Docker Compose에서 띄운 Kafka 서버 주소
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      bootstrap-servers: localhost:9092 # Docker Compose에서 띄운 Kafka 서버 주소
      group-id: test
      auto-offset-reset: earliest
    template:
      default-topic: test-topic

logging:
  level:
    org.springframework.kafka: INFO
    org.apache.kafka: INFO